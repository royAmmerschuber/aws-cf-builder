{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "Api2RestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "BodyS3Location": {
                    "Bucket": "bucket",
                    "ETag": "tag",
                    "Key": "path/key",
                    "Version": "version"
                }
            }
        },
        "Api2MeierResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "PathPart": "meier",
                "ParentId": {
                    "Fn::GetAtt": [
                        "Api2RestApi",
                        "RootResourceId"
                    ]
                },
                "RestApiId": {
                    "Ref": "Api2RestApi"
                }
            }
        },
        "Api2MeierGetMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/san/invocations"
                    }
                },
                "HttpMethod": "GET",
                "ResourceId": {
                    "Ref": "Api2MeierResource"
                },
                "RestApiId": {
                    "Ref": "Api2RestApi"
                }
            }
        },
        "Api2MeierOptionsMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/paul/invocations"
                    }
                },
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "Api2MeierResource"
                },
                "RestApiId": {
                    "Ref": "Api2RestApi"
                }
            }
        },
        "ApiRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "wierdApi",
                "ApiKeySourceType": "AUTHORIZER",
                "BinaryMediaTypes": [
                    "x",
                    "y",
                    "z"
                ],
                "Body": {
                    "openapi": "some openapi"
                },
                "Description": "bla bla bla",
                "EndpointConfiguration": [
                    "EDGE",
                    "REGIONAL"
                ],
                "FailOnWarnings": true,
                "Policy": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "*",
                            "Resource": "*"
                        }
                    ]
                }
            }
        },
        "ApiPaulResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "PathPart": "paul",
                "ParentId": {
                    "Fn::GetAtt": [
                        "ApiRestApi",
                        "RootResourceId"
                    ]
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "PathPart": "meier",
                "ParentId": {
                    "Ref": "ApiPaulResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierGetMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "Credentials": "arn:aws:iam::*:user/*",
                    "CacheKeyParameters": [
                        "some",
                        "random",
                        {
                            "Ref": "Api2RestApi"
                        }
                    ],
                    "CacheNamespace": "thaNameS",
                    "ConnectionType": "VPC_LINK",
                    "ConnectionId": "vpc-someId",
                    "ContentHandling": "CONVERT_TO_BINARY",
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestParameters": {
                        "end": "start",
                        "to": "from",
                        "dest": "src"
                    },
                    "RequestTemplates": {
                        "type": "t",
                        "application/html": "<body/>",
                        "application/json": "templ"
                    },
                    "IntegrationResponses": [
                        {
                            "ContentHandling": "CONVERT_TO_BINARY",
                            "ResponseParameters": {
                                "klaus": "haus",
                                "raus": "schlauch",
                                "paul": "meier"
                            },
                            "ResponseTemplates": {
                                "application/javascript": "yoyoyo",
                                "none": "nother text",
                                "application/json": "some boring template"
                            },
                            "StatusCode": "200"
                        },
                        {
                            "StatusCode": "400"
                        },
                        {
                            "StatusCode": "432"
                        }
                    ],
                    "TimeoutInMillis": 1234,
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/someLambdaArn/invocations"
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": {
                                "Ref": "ApiPaulMeierGetNiModel"
                            },
                            "differentResponse": "somethingRandom"
                        },
                        "StatusCode": "200"
                    }
                ],
                "RequestModels": {
                    "application/json": {
                        "Ref": "ApiPaulMeierGetSanModel"
                    },
                    "some/thing": {
                        "Ref": "ApiPaulMeierGetYonModel"
                    },
                    "other/form": "idAsString"
                },
                "RequestParameters": {
                    "method.request.header.paul": true,
                    "method.request.querystring.paul": false,
                    "method.request.path.peter": true,
                    "method.request.path.pan": {
                        "Ref": "Api2RestApi"
                    }
                },
                "RequestValidatorId": {
                    "Ref": "ApiPaulMeierGetRequestValidator"
                },
                "OperationName": "launchLambda",
                "ApiKeyRequired": true,
                "HttpMethod": "GET",
                "ResourceId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierDeleteMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizationScopes": [
                    "one",
                    "two"
                ],
                "AuthorizerId": {
                    "Ref": "ApiPaulMeierDeleteNiAuthorizer"
                },
                "Integration": {
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\":200}"
                    },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,auth,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Origin": false
                        },
                        "StatusCode": "200"
                    }
                ],
                "HttpMethod": "DELETE",
                "ResourceId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierHeadMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "Credentials": {
                        "Fn::GetAtt": [
                            "ApiPaulMeierHeadRole",
                            "Arn"
                        ]
                    },
                    "ConnectionType": "INTERNET",
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\":200}"
                    },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,auth,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Origin": false
                        },
                        "StatusCode": "200"
                    }
                ],
                "RequestValidatorId": {
                    "Ref": "ApiPaulMeierHeadRequestValidator"
                },
                "HttpMethod": "HEAD",
                "ResourceId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierPatchMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\":200}"
                    },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,auth,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Origin": false
                        },
                        "StatusCode": "200"
                    }
                ],
                "HttpMethod": "PATCH",
                "ResourceId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierPostMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\":200}"
                    },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,auth,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Origin": false
                        },
                        "StatusCode": "200"
                    }
                ],
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierPutMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\":200}"
                    },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,auth,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Origin": false
                        },
                        "StatusCode": "200"
                    }
                ],
                "HttpMethod": "PUT",
                "ResourceId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierCustomoptionResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "PathPart": "customOption",
                "ParentId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierCustomoptionOptionsMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\":200}"
                    },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,auth,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'sweden'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Origin": false
                        },
                        "StatusCode": "200"
                    }
                ],
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "ApiPaulMeierCustomoptionResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierNooptionsResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "PathPart": "noOptions",
                "ParentId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierNooptionsPutMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "AWS_IAM",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/ni/invocations"
                    }
                },
                "HttpMethod": "PUT",
                "ResourceId": {
                    "Ref": "ApiPaulMeierNooptionsResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierOptionsMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\":200}"
                    },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,auth,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'GET,DELETE,HEAD,PATCH,POST,PUT,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Origin": false
                        },
                        "StatusCode": "200"
                    }
                ],
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "ApiPaulMeierResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulPutMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/some/invocations"
                    }
                },
                "HttpMethod": "PUT",
                "ResourceId": {
                    "Ref": "ApiPaulResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulOptionsMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "Integration": {
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\":200}"
                    },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,auth,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'PUT,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Origin": false
                        },
                        "StatusCode": "200"
                    }
                ],
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "ApiPaulResource"
                },
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiDplDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [
                "ApiPaulMeierGetMethod",
                "ApiPaulMeierDeleteMethod",
                "ApiPaulMeierHeadMethod",
                "ApiPaulMeierPatchMethod",
                "ApiPaulMeierPostMethod",
                "ApiPaulMeierPutMethod",
                "ApiPaulMeierCustomoptionOptionsMethod",
                "ApiPaulMeierNooptionsPutMethod",
                "ApiPaulPutMethod"
            ],
            "Properties": {
                "StageDescription": {
                    "AccessLogSetting": {
                        "DestinationArn": "arn:bla"
                    }
                },
                "DeploymentCanarySettings": {
                    "PercentTraffic": 4
                },
                "Description": "aws-some",
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiCogAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
                "IdentitySource": "secret",
                "Name": "cog",
                "Type": "COGNITO_USER_POOLS",
                "ProviderARNs": [
                    "arn:userpool"
                ],
                "RestApiId": {
                    "Ref": "ApiRestApi"
                },
                "AuthorizerResultTtlInSeconds": 4
            }
        },
        "ApiIchiModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "ContentType": "application/json",
                "Schema": {
                    "thisIsASchema": "man!"
                },
                "Description": "epic model",
                "Name": "ichi",
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "Api3RestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "BodyS3Location": {
                    "Bucket": "bucket",
                    "Key": "path/key"
                }
            }
        },
        "ApiPaulMeierGetNiModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "ContentType": "application/json",
                "Schema": {},
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierGetSanModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "ContentType": "application/json",
                "Schema": {},
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierGetYonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "ContentType": "some/thing",
                "Schema": {},
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierGetRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
                "Name": "peter",
                "ValidateRequestBody": true,
                "ValidateRequestParameters": false,
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierDeleteNiAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
                "IdentitySource": "auth",
                "Name": "ni",
                "Type": "COGNITO_USER_POOLS",
                "ProviderARNs": [
                    "someone"
                ],
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierHeadRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
                "RestApiId": {
                    "Ref": "ApiRestApi"
                }
            }
        },
        "ApiPaulMeierHeadRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        }
    }
}